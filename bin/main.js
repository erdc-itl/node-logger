"use strict";var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var fs=require("fs");var zlib=require("zlib");var format=require("util").format;var path=require("path");var mkdirp=require("mkdirp");var chalk=require("chalk");var COLORS={verbose:chalk.black.bgWhite,info:chalk.black.bgCyan,warning:chalk.black.bgYellow,error:chalk.white.bgRed,prefix:chalk.magenta.bgBlack.bold};var LEVELS=Object.freeze({verbose:10,info:20,warning:30,error:40});var SYMBOLS=Object.freeze({verbose:"📢",info:"ℹ️",warning:"⚠️",error:"⛔️"});var logLevel=LEVELS.info;var logFilePaths=[];var logRotateSize=0;var consoleOutput=true;function rotate(file){if(logRotateSize > 0){var stat=fs.statSync(file.path);if(stat.size > logRotateSize){fs.closeSync(file.fd);var zip=zlib.gzipSync(fs.readFileSync(file.path));var logNumber=1;while(fs.existsSync(file.path + "." + logNumber + ".gz")) {logNumber++;}fs.writeFileSync(file.path + "." + logNumber + ".gz",zip);fs.truncateSync(file.path,0);file.fd = fs.openSync(file.path,"a");}}}var now=(function(){var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];return function(){var d=new Date();var date=d.getDate();if(date < 10){date = "0" + date;}var hours=d.getUTCHours();if(hours < 10){hours = "0" + hours;}var minutes=d.getUTCMinutes();if(minutes < 10){minutes = "0" + minutes;}var seconds=d.getUTCSeconds();if(seconds < 10){seconds = "0" + seconds;}return "[" + date + " " + months[d.getUTCMonth()] + " " + d.getUTCFullYear() + " " + hours + ":" + minutes + ":" + seconds + "]";};})();var Logger=(function(){function Logger(prefix){_classCallCheck(this,Logger);this.prefix = prefix;}_createClass(Logger,[{key:"verbose",value:function verbose(msg){if(logLevel <= LEVELS.verbose){for(var _len=arguments.length,bits=Array(_len > 1?_len - 1:0),_key=1;_key < _len;_key++) {bits[_key - 1] = arguments[_key];}this.log.apply(this,[msg,"verbose"].concat(bits));}}},{key:"info",value:function info(msg){if(logLevel <= LEVELS.info){for(var _len2=arguments.length,bits=Array(_len2 > 1?_len2 - 1:0),_key2=1;_key2 < _len2;_key2++) {bits[_key2 - 1] = arguments[_key2];}this.log.apply(this,[msg,"info"].concat(bits));}}},{key:"warn",value:function warn(msg){if(logLevel <= LEVELS.warning){for(var _len3=arguments.length,bits=Array(_len3 > 1?_len3 - 1:0),_key3=1;_key3 < _len3;_key3++) {bits[_key3 - 1] = arguments[_key3];}this.log.apply(this,[msg,"warning"].concat(bits));}}},{key:"error",value:function error(msg){if(logLevel <= LEVELS.error){for(var _len4=arguments.length,bits=Array(_len4 > 1?_len4 - 1:0),_key4=1;_key4 < _len4;_key4++) {bits[_key4 - 1] = arguments[_key4];}this.log.apply(this,[msg,"error"].concat(bits));}}},{key:"log",value:function log(msg){var level=arguments.length <= 1 || arguments[1] === undefined?"info":arguments[1];for(var _len5=arguments.length,bits=Array(_len5 > 2?_len5 - 2:0),_key5=2;_key5 < _len5;_key5++) {bits[_key5 - 2] = arguments[_key5];}var printMsg=now() + " " + SYMBOLS[level] + "  " + COLORS[level](level) + " " + COLORS.prefix(this.prefix) + " " + (msg?format.apply(undefined,[msg].concat(bits)):"");if(consoleOutput){console.log(printMsg);}logFilePaths.forEach(function(file){fs.writeSync(file.fd,printMsg + "\n");rotate(file);});}}],[{key:"setOptions",value:function setOptions(options){if(options.level && !Number.isNaN(+options.level)){var level=+options.level;if(level >= LEVELS.error){level = LEVELS.error;}else if(level >= LEVELS.warning){level = LEVELS.warning;}else if(level >= LEVELS.info){level = LEVELS.info;}else {level = LEVELS.verbose;}logLevel = level;}if(typeof options.console === "boolean"){consoleOutput = options.console;}if(options.files && Array.isArray(options.files)){options.files.forEach(function(logPath){mkdirp.sync(path.dirname(logPath));logFilePaths.push({path:logPath,fd:fs.openSync(logPath,"a+")});});}if(!Number.isNaN(+options.rotate)){logRotateSize = +options.rotate;}}}]);return Logger;})();module.exports = Logger;